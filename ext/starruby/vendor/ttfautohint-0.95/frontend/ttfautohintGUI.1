.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.5.
.TH TTFAUTOHINTGUI "1" "March 2013" "ttfautohintGUI 0.95" "User Commands"
.SH NAME
ttfautohintGUI \- add new auto-generated hints to a TrueType font
.SH SYNOPSIS
.B ttfautohintGUI
[\fIOPTION\fR]...
.SH DESCRIPTION
A GUI application to replace hints in a TrueType font.
.PP
The new hints are based on FreeType's auto\-hinter.
.PP
This program is a simple front\-end to the `ttfautohint' library.
.PP
Long options can be given with one or two dashes,
and with and without equal sign between option and argument.
This means that the following forms are acceptable:
`\-foo=bar', `\-\-foo=bar', `\-foo bar', `\-\-foo bar'.
.PP
Mandatory arguments to long options are mandatory for short options too.
Options not related to Qt or X11 set default values.
.SH OPTIONS
.TP
\fB\-c\fR, \fB\-\-components\fR
hint glyph components separately
.TP
\fB\-d\fR, \fB\-\-dehint\fR
remove all hints
.TP
\fB\-f\fR, \fB\-\-latin\-fallback\fR
set fallback script to latin
.TP
\fB\-G\fR, \fB\-\-hinting\-limit\fR=\fIN\fR
switch off hinting above this PPEM value
(default: 200); value 0 means no limit
.TP
\fB\-h\fR, \fB\-\-help\fR
display this help and exit
.TP
\fB\-\-help\-all\fR
show Qt and X11 specific options also
.TP
\fB\-i\fR, \fB\-\-ignore\-restrictions\fR
override font license restrictions
.TP
\fB\-l\fR, \fB\-\-hinting\-range\-min\fR=\fIN\fR
the minimum PPEM value for hint sets
(default: 8)
.TP
\fB\-n\fR, \fB\-\-no\-info\fR
don't add ttfautohint info
to the version string(s) in the `name' table
.TP
\fB\-p\fR, \fB\-\-pre\-hinting\fR
apply original hints in advance
.TP
\fB\-r\fR, \fB\-\-hinting\-range\-max\fR=\fIN\fR
the maximum PPEM value for hint sets
(default: 50)
.TP
\fB\-s\fR, \fB\-\-symbol\fR
input is symbol font
.TP
\fB\-v\fR, \fB\-\-verbose\fR
show progress information
.TP
\fB\-V\fR, \fB\-\-version\fR
print version information and exit
.TP
\fB\-w\fR, \fB\-\-strong\-stem\-width\fR=\fIS\fR
use strong stem width routine for modes S,
where S is a string of up to three letters
with possible values `g' for grayscale,
`G' for GDI ClearType, and `D' for
DirectWrite ClearType (default: G)
.TP
\fB\-W\fR, \fB\-\-windows\-compatibility\fR
add blue zones for `usWinAscent' and
`usWinDescent' to avoid clipping
.TP
\fB\-x\fR, \fB\-\-increase\-x\-height\fR=\fIN\fR
increase x height for sizes in the range
6<=PPEM<=N; value 0 switches off this feature
(default: 14)
.TP
\fB\-X\fR, \fB\-\-x\-height\-snapping\-exceptions\fR=\fISTRING\fR
specify a comma\-separated list of
x\-height snapping exceptions, for example
"\-9, 13\-17, 19" (default: "")
.SS "Qt Options:"
.TP
\fB\-\-graphicssystem\fR=\fISYSTEM\fR
select a different graphics system backend
instead of the default one
(possible values: `raster', `opengl')
.TP
\fB\-\-reverse\fR
set layout direction to right\-to\-left
.TP
\fB\-\-session\fR=\fIID\fR
restore the application for the given ID
.TP
\fB\-\-style\fR=\fISTYLE\fR
set application GUI style
(possible values: motif, windows, platinum)
.TP
\fB\-\-stylesheet\fR=\fISHEET\fR
apply the given Qt stylesheet
to the application widgets
.SS "X11 options:"
.TP
\fB\-\-background\fR=\fICOLOR\fR
set the default background color
and an application palette
(light and dark shades are calculated)
.TP
\fB\-\-bg\fR=\fICOLOR\fR
same as \fB\-\-background\fR
.TP
\fB\-\-btn\fR=\fICOLOR\fR
set the default button color
.TP
\fB\-\-button\fR=\fICOLOR\fR
same as \fB\-\-btn\fR
.TP
\fB\-\-cmap\fR
use a private color map on an 8\-bit display
.TP
\fB\-\-display\fR=\fINAME\fR
use the given X\-server display
.TP
\fB\-\-fg\fR=\fICOLOR\fR
set the default foreground color
.TP
\fB\-\-fn\fR=\fIFONTNAME\fR
set the application font
.TP
\fB\-\-font\fR=\fIFONTNAME\fR
same as \fB\-\-fn\fR
.TP
\fB\-\-foreground\fR=\fICOLOR\fR
same as \fB\-\-fg\fR
.TP
\fB\-\-geometry\fR=\fIGEOMETRY\fR
set the client geometry of first window
.TP
\fB\-\-im\fR=\fISERVER\fR
set the X Input Method (XIM) server
.TP
\fB\-\-inputstyle\fR=\fISTYLE\fR
set X Input Method input style
(possible values: onthespot, overthespot,
offthespot, root)
.TP
\fB\-\-name\fR=\fINAME\fR
set the application name
.TP
\fB\-\-ncols\fR=\fICOUNT\fR
limit the number of colors allocated
in the color cube on an 8\-bit display,
if the application is using the
QApplication::ManyColor color specification
.TP
\fB\-\-title\fR=\fITITLE\fR
set the application title (caption)
.TP
\fB\-\-visual\fR=\fIVISUAL\fR
force the application
to use the given visual on an 8\-bit display
(only possible value: TrueColor)
.PP
The program accepts both TTF and TTC files as input.
Use option \fB\-i\fR only if you have a legal permission to modify the font.
If option \fB\-f\fR is not set, glyphs not in the latin range stay unhinted.
The used PPEM value for option \fB\-p\fR is FUnits per em, normally 2048.
With option \fB\-s\fR, use default values for standard stem width and height,
otherwise they are derived from latin character `o'.
.PP
A hint set contains the optimal hinting for a certain PPEM value;
the larger the hint set range, the more hint sets get computed,
usually increasing the output font size.  Note, however,
that the `gasp' table of the output file enables grayscale hinting
for all sizes (limited by option \fB\-G\fR which is handled in the bytecode).
.PP
A command\-line version of this program is called `ttfautohint'.
.SH "REPORTING BUGS"
Report bugs to: freetype\-devel@nongnu.org
ttfautohint home page: <http://www.freetype.org/ttfautohint>
.SH COPYRIGHT
Copyright \(co 2011\-2013 Werner Lemberg <wl@gnu.org>.
License: FreeType License (FTL) or GNU GPLv2.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
